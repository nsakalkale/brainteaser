{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY PROJECTS\\\\BrainTeaser_Quiz\\\\brainteaser\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const location = useLocation();\n  const {\n    duration = 10,\n    negativeMarking = 0,\n    multipleCorrect = 0\n  } = location.state || {};\n  const [questions, setQuestions] = useState([{\n    id: 1,\n    question: \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\n    options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\n    answer: \"a) 3\"\n  }, {\n    id: 2,\n    question: \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\n    options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\n    answer: \"b) 8\"\n  }, {\n    id: 3,\n    question: \"What word becomes shorter when you add two letters to it?\",\n    options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\n    answer: \"a) Short\"\n  }]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [timeRemaining, setTimeRemaining] = useState(60);\n  const [sessionActive, setSessionActive] = useState(false);\n  const [quizState, setQuizState] = useState(Array(questions.length).fill(null));\n  const [score, setScore] = useState(0);\n  const [questionStatus, setQuestionStatus] = useState(Array(questions.length).fill(\"notAttempted\"));\n  const [showSummary, setShowSummary] = useState(false);\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      event.preventDefault();\n      event.returnValue = \"Your progress will be lost and the quiz will be submitted. Are you sure you want to reload?\";\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    const sessionTimer = setTimeout(() => {\n      setSessionActive(false);\n      alert(\"Session ended. Please start again to attempt the quiz.\");\n    }, duration * 60 * 1000); // Session duration\n\n    return () => {\n      clearTimeout(sessionTimer);\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [duration]);\n  useEffect(() => {\n    if (sessionActive) {\n      const timer = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev === 0) {\n            if (currentQuestion === questions.length - 1) {\n              handleSubmit();\n            } else {\n              handleNextQuestion(true);\n            }\n            return 60;\n          } else {\n            return prev - 1;\n          }\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [sessionActive, currentQuestion]);\n  const handleStartQuiz = () => {\n    setSessionActive(true);\n  };\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = (missed = false) => {\n    const correctAnswer = questions[currentQuestion].answer;\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : negativeMarking ? -1 : 0;\n    const updatedQuizState = [...quizState];\n    updatedQuizState[currentQuestion] = {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer,\n      marks\n    };\n    setQuizState(updatedQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = selectedOption !== \"\" ? \"attempted\" : missed ? \"missed\" : \"notAttempted\";\n    setQuestionStatus(updatedStatus);\n    if (currentQuestion === questions.length - 1) {\n      // Last question, handle separately\n      handleSubmit();\n    } else {\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\n      setTimeRemaining(60); // Reset timer for the next question\n    }\n  };\n  const handleSubmit = () => {\n    const correctAnswer = questions[currentQuestion].answer;\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : negativeMarking ? -1 : 0;\n    const updatedQuizState = [...quizState];\n    updatedQuizState[currentQuestion] = {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer,\n      marks\n    };\n    setQuizState(updatedQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\n    setQuestionStatus(updatedStatus);\n    setSessionActive(false);\n    setShowSummary(true);\n  };\n  const handleFinalSubmit = () => {\n    setShowSummary(false);\n    console.log(\"Quiz State:\", quizState);\n    console.log(\"Total Score:\", score);\n    alert(\"Quiz submitted successfully. Session ended.\");\n    // You can also redirect or end the session here\n  };\n  const instructions = [`You have ${duration} minutes to complete the quiz.`, \"Each question will be presented one at a time with a time limit of 1 minute per question.\", \"Select the correct option from the given choices.\", multipleCorrect ? \"There may be multiple correct answers for some questions.\" : \"Each question has only one correct answer.\", negativeMarking ? \"Wrong answers will result in negative marking.\" : \"There is no negative marking for wrong answers.\", \"Once you answer a question or the time is up, you will move to the next question.\", \"You cannot go back to previous questions.\", \"Your progress will be automatically saved, but if you reload the page, the quiz will be submitted, and your progress will be lost.\", \"Make sure to submit the quiz before the session ends.\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!sessionActive && !showSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded border p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: instruction\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), sessionActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Remaining: \", `01:${String(timeRemaining).padStart(2, \"0\")}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"option\",\n              id: `option${index}`,\n              value: option,\n              onChange: handleOptionChange,\n              checked: selectedOption === option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: `option${index}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3 me-2\",\n        onClick: handleNextQuestion,\n        disabled: selectedOption === \"\" || currentQuestion === questions.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), currentQuestion === questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3 ms-2\",\n        onClick: handleSubmit,\n        disabled: selectedOption === \"\",\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Question Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-group-item ${questionStatus[index] === \"attempted\" ? \"list-group-item-success\" : questionStatus[index] === \"missed\" ? \"list-group-item-warning\" : \"\"}`,\n            children: [\"Question \", index + 1, \" - \", questionStatus[index]]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), showSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: quizState.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", index + 1, \": \", question.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your Answer: \", question.selectedOption]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Correct Answer: \", question.correctAnswer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Marks: \", question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Marks: \", question.marks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: handleFinalSubmit,\n        children: \"Final Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"cu+Gdi7KkkjMycOWFhItZev92fA=\", false, function () {\n  return [useLocation];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Quiz","_s","location","duration","negativeMarking","multipleCorrect","state","questions","setQuestions","id","question","options","answer","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","timeRemaining","setTimeRemaining","sessionActive","setSessionActive","quizState","setQuizState","Array","length","fill","score","setScore","questionStatus","setQuestionStatus","showSummary","setShowSummary","handleBeforeUnload","event","preventDefault","returnValue","window","addEventListener","sessionTimer","setTimeout","alert","clearTimeout","removeEventListener","timer","setInterval","prev","handleSubmit","handleNextQuestion","clearInterval","handleStartQuiz","handleOptionChange","e","target","value","missed","correctAnswer","isCorrect","marks","updatedQuizState","prevScore","updatedStatus","prevQuestion","handleFinalSubmit","console","log","instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","instruction","index","String","padStart","option","type","name","onChange","checked","htmlFor","onClick","disabled","_","_c","$RefreshReg$"],"sources":["D:/MY PROJECTS/BrainTeaser_Quiz/brainteaser/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Quiz = () => {\r\n  const location = useLocation();\r\n  const {\r\n    duration = 10,\r\n    negativeMarking = 0,\r\n    multipleCorrect = 0,\r\n  } = location.state || {};\r\n\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      id: 1,\r\n      question:\r\n        \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\r\n      options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\r\n      answer: \"a) 3\",\r\n    },\r\n    {\r\n      id: 2,\r\n      question:\r\n        \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\r\n      options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\r\n      answer: \"b) 8\",\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"What word becomes shorter when you add two letters to it?\",\r\n      options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\r\n      answer: \"a) Short\",\r\n    },\r\n  ]);\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [timeRemaining, setTimeRemaining] = useState(60);\r\n  const [sessionActive, setSessionActive] = useState(false);\r\n  const [quizState, setQuizState] = useState(\r\n    Array(questions.length).fill(null)\r\n  );\r\n  const [score, setScore] = useState(0);\r\n  const [questionStatus, setQuestionStatus] = useState(\r\n    Array(questions.length).fill(\"notAttempted\")\r\n  );\r\n  const [showSummary, setShowSummary] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (event) => {\r\n      event.preventDefault();\r\n      event.returnValue =\r\n        \"Your progress will be lost and the quiz will be submitted. Are you sure you want to reload?\";\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n    const sessionTimer = setTimeout(() => {\r\n      setSessionActive(false);\r\n      alert(\"Session ended. Please start again to attempt the quiz.\");\r\n    }, duration * 60 * 1000); // Session duration\r\n\r\n    return () => {\r\n      clearTimeout(sessionTimer);\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, [duration]);\r\n\r\n  useEffect(() => {\r\n    if (sessionActive) {\r\n      const timer = setInterval(() => {\r\n        setTimeRemaining((prev) => {\r\n          if (prev === 0) {\r\n            if (currentQuestion === questions.length - 1) {\r\n              handleSubmit();\r\n            } else {\r\n              handleNextQuestion(true);\r\n            }\r\n            return 60;\r\n          } else {\r\n            return prev - 1;\r\n          }\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [sessionActive, currentQuestion]);\r\n\r\n  const handleStartQuiz = () => {\r\n    setSessionActive(true);\r\n  };\r\n\r\n  const handleOptionChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = (missed = false) => {\r\n    const correctAnswer = questions[currentQuestion].answer;\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : negativeMarking ? -1 : 0;\r\n\r\n    const updatedQuizState = [...quizState];\r\n    updatedQuizState[currentQuestion] = {\r\n      question: questions[currentQuestion].question,\r\n      selectedOption,\r\n      correctAnswer,\r\n      marks,\r\n    };\r\n\r\n    setQuizState(updatedQuizState);\r\n\r\n    setScore((prevScore) => prevScore + marks);\r\n\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] =\r\n      selectedOption !== \"\" ? \"attempted\" : missed ? \"missed\" : \"notAttempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    if (currentQuestion === questions.length - 1) {\r\n      // Last question, handle separately\r\n      handleSubmit();\r\n    } else {\r\n      setCurrentQuestion((prevQuestion) => prevQuestion + 1);\r\n      setTimeRemaining(60); // Reset timer for the next question\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const correctAnswer = questions[currentQuestion].answer;\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : negativeMarking ? -1 : 0;\r\n\r\n    const updatedQuizState = [...quizState];\r\n    updatedQuizState[currentQuestion] = {\r\n      question: questions[currentQuestion].question,\r\n      selectedOption,\r\n      correctAnswer,\r\n      marks,\r\n    };\r\n\r\n    setQuizState(updatedQuizState);\r\n\r\n    setScore((prevScore) => prevScore + marks);\r\n\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] =\r\n      selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    setSessionActive(false);\r\n    setShowSummary(true);\r\n  };\r\n\r\n  const handleFinalSubmit = () => {\r\n    setShowSummary(false);\r\n    console.log(\"Quiz State:\", quizState);\r\n    console.log(\"Total Score:\", score);\r\n    alert(\"Quiz submitted successfully. Session ended.\");\r\n    // You can also redirect or end the session here\r\n  };\r\n\r\n  const instructions = [\r\n    `You have ${duration} minutes to complete the quiz.`,\r\n    \"Each question will be presented one at a time with a time limit of 1 minute per question.\",\r\n    \"Select the correct option from the given choices.\",\r\n    multipleCorrect\r\n      ? \"There may be multiple correct answers for some questions.\"\r\n      : \"Each question has only one correct answer.\",\r\n    negativeMarking\r\n      ? \"Wrong answers will result in negative marking.\"\r\n      : \"There is no negative marking for wrong answers.\",\r\n    \"Once you answer a question or the time is up, you will move to the next question.\",\r\n    \"You cannot go back to previous questions.\",\r\n    \"Your progress will be automatically saved, but if you reload the page, the quiz will be submitted, and your progress will be lost.\",\r\n    \"Make sure to submit the quiz before the session ends.\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!sessionActive && !showSummary && (\r\n        <div className=\"bg-white rounded border p-4\">\r\n          \r\n          <div className=\"mt-3\">\r\n            <h5>\r\n              <b>Instructions</b>\r\n            </h5>\r\n            <ul>\r\n              {instructions.map((instruction, index) => (\r\n                <li key={index}>{instruction}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {sessionActive && (\r\n        <div className=\"mt-3\">\r\n          <div className=\"mb-3\">\r\n            <p>\r\n              Time Remaining: {`01:${String(timeRemaining).padStart(2, \"0\")}`}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <h5>{questions[currentQuestion].question}</h5>\r\n            <form>\r\n              {questions[currentQuestion].options.map((option, index) => (\r\n                <div key={index} className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"option\"\r\n                    id={`option${index}`}\r\n                    value={option}\r\n                    onChange={handleOptionChange}\r\n                    checked={selectedOption === option}\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label\"\r\n                    htmlFor={`option${index}`}\r\n                  >\r\n                    {option}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </form>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary mt-3 me-2\"\r\n            onClick={handleNextQuestion}\r\n            disabled={\r\n              selectedOption === \"\" || currentQuestion === questions.length - 1\r\n            }\r\n          >\r\n            Next\r\n          </button>\r\n          {currentQuestion === questions.length - 1 && (\r\n            <button\r\n              className=\"btn btn-primary mt-3 ms-2\"\r\n              onClick={handleSubmit}\r\n              disabled={selectedOption === \"\"}\r\n            >\r\n              Submit Quiz\r\n            </button>\r\n          )}\r\n          <div className=\"mt-3\">\r\n            <h5>Question Status:</h5>\r\n            <div className=\"list-group\">\r\n              {questions.map((_, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`list-group-item ${\r\n                    questionStatus[index] === \"attempted\"\r\n                      ? \"list-group-item-success\"\r\n                      : questionStatus[index] === \"missed\"\r\n                      ? \"list-group-item-warning\"\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  Question {index + 1} - {questionStatus[index]}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showSummary && (\r\n        <div className=\"mt-3\">\r\n          <h3>Quiz Summary</h3>\r\n          <p>Total Score: {score}</p>\r\n          <div>\r\n            {quizState.map((question, index) => (\r\n              <div key={index}>\r\n                <p>\r\n                  Question {index + 1}: {question.question}\r\n                </p>\r\n                <p>Your Answer: {question.selectedOption}</p>\r\n                <p>Correct Answer: {question.correctAnswer}</p>\r\n                <p>Marks: {question}</p>\r\n                <p>Marks: {question.marks}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button className=\"btn btn-primary mt-3\" onClick={handleFinalSubmit}>\r\n            Final Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}