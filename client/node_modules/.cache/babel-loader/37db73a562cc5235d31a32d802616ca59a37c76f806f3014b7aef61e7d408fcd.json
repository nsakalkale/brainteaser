{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY PROJECTS\\\\BrainTeaser_Quiz\\\\brainteaser\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\n  options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\n  answer: \"a) 3\"\n}\n// Add more questions as needed\n];\nexport default function Quiz() {\n  _s();\n  const location = useLocation();\n  const {\n    duration = 12,\n    negativeMarking,\n    multipleCorrect\n  } = location.state || {};\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [timeRemaining, setTimeRemaining] = useState(60); // 1 minute per question\n  const [answers, setAnswers] = useState(Array(questions.length).fill(\"\"));\n  const [score, setScore] = useState(0);\n  const [quizState, setQuizState] = useState([]);\n  const [questionStatus, setQuestionStatus] = useState(Array(questions.length).fill(\"notAttempted\"));\n  useEffect(() => {\n    const savedCurrentQuestion = parseInt(localStorage.getItem(\"currentQuestion\"), 10) || 0;\n    const savedSelectedOption = localStorage.getItem(\"selectedOption\") || \"\";\n    const savedAnswers = JSON.parse(localStorage.getItem(\"answers\")) || Array(questions.length).fill(\"\");\n    const savedQuizState = JSON.parse(localStorage.getItem(\"quizState\")) || [];\n    const savedQuestionStatus = JSON.parse(localStorage.getItem(\"questionStatus\")) || Array(questions.length).fill(\"notAttempted\");\n    const savedScore = parseInt(localStorage.getItem(\"score\"), 10) || 0;\n    setCurrentQuestion(savedCurrentQuestion);\n    setSelectedOption(savedSelectedOption);\n    setAnswers(savedAnswers);\n    setQuizState(savedQuizState);\n    setQuestionStatus(savedQuestionStatus);\n    setScore(savedScore);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"currentQuestion\", currentQuestion);\n    localStorage.setItem(\"selectedOption\", selectedOption);\n    localStorage.setItem(\"answers\", JSON.stringify(answers));\n    localStorage.setItem(\"quizState\", JSON.stringify(quizState));\n    localStorage.setItem(\"questionStatus\", JSON.stringify(questionStatus));\n    localStorage.setItem(\"score\", score);\n  }, [currentQuestion, selectedOption, answers, quizState, questionStatus, score]);\n  useEffect(() => {\n    let timer;\n    if (timeRemaining > 0) {\n      timer = setTimeout(() => {\n        setTimeRemaining(prev => prev - 1);\n      }, 1000);\n    } else {\n      handleNextQuestion(true); // Move to the next question if time is up\n    }\n    return () => clearTimeout(timer);\n  }, [timeRemaining]);\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = (missed = false) => {\n    // Your logic for handling the next question\n  };\n  const handleQuestionClick = index => {\n    setCurrentQuestion(index);\n    setTimeRemaining(60); // Reset the timer when a new question is selected\n  };\n  const handleSubmit = (finalQuizState = quizState) => {\n    console.log(\"Quiz State:\", finalQuizState);\n    console.log(`Total Marks: ${score}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `option${index}`,\n              name: \"options\",\n              value: option,\n              checked: selectedOption === option,\n              onChange: handleOptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `option${index}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Remaining: \", timeRemaining, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-navigation\",\n        children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentQuestion === index ? \"active\" : \"\",\n          onClick: () => handleQuestionClick(index),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Quiz, \"L3bq8NqgNzsZkl0a1QCwYAobIFI=\", false, function () {\n  return [useLocation];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","questions","question","options","answer","Quiz","_s","location","duration","negativeMarking","multipleCorrect","state","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","timeRemaining","setTimeRemaining","answers","setAnswers","Array","length","fill","score","setScore","quizState","setQuizState","questionStatus","setQuestionStatus","savedCurrentQuestion","parseInt","localStorage","getItem","savedSelectedOption","savedAnswers","JSON","parse","savedQuizState","savedQuestionStatus","savedScore","setItem","stringify","timer","setTimeout","prev","handleNextQuestion","clearTimeout","handleOptionChange","e","target","value","missed","handleQuestionClick","index","handleSubmit","finalQuizState","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","id","name","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["D:/MY PROJECTS/BrainTeaser_Quiz/brainteaser/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst questions = [\r\n  {\r\n    question:\r\n      \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\r\n    options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\r\n    answer: \"a) 3\",\r\n  },\r\n  // Add more questions as needed\r\n];\r\n\r\nexport default function Quiz() {\r\n  const location = useLocation();\r\n  const {\r\n    duration = 12,\r\n    negativeMarking,\r\n    multipleCorrect,\r\n  } = location.state || {};\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [timeRemaining, setTimeRemaining] = useState(60); // 1 minute per question\r\n  const [answers, setAnswers] = useState(Array(questions.length).fill(\"\"));\r\n  const [score, setScore] = useState(0);\r\n  const [quizState, setQuizState] = useState([]);\r\n  const [questionStatus, setQuestionStatus] = useState(\r\n    Array(questions.length).fill(\"notAttempted\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    const savedCurrentQuestion =\r\n      parseInt(localStorage.getItem(\"currentQuestion\"), 10) || 0;\r\n    const savedSelectedOption = localStorage.getItem(\"selectedOption\") || \"\";\r\n    const savedAnswers =\r\n      JSON.parse(localStorage.getItem(\"answers\")) ||\r\n      Array(questions.length).fill(\"\");\r\n    const savedQuizState = JSON.parse(localStorage.getItem(\"quizState\")) || [];\r\n    const savedQuestionStatus =\r\n      JSON.parse(localStorage.getItem(\"questionStatus\")) ||\r\n      Array(questions.length).fill(\"notAttempted\");\r\n    const savedScore = parseInt(localStorage.getItem(\"score\"), 10) || 0;\r\n\r\n    setCurrentQuestion(savedCurrentQuestion);\r\n    setSelectedOption(savedSelectedOption);\r\n    setAnswers(savedAnswers);\r\n    setQuizState(savedQuizState);\r\n    setQuestionStatus(savedQuestionStatus);\r\n    setScore(savedScore);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"currentQuestion\", currentQuestion);\r\n    localStorage.setItem(\"selectedOption\", selectedOption);\r\n    localStorage.setItem(\"answers\", JSON.stringify(answers));\r\n    localStorage.setItem(\"quizState\", JSON.stringify(quizState));\r\n    localStorage.setItem(\"questionStatus\", JSON.stringify(questionStatus));\r\n    localStorage.setItem(\"score\", score);\r\n  }, [\r\n    currentQuestion,\r\n    selectedOption,\r\n    answers,\r\n    quizState,\r\n    questionStatus,\r\n    score,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (timeRemaining > 0) {\r\n      timer = setTimeout(() => {\r\n        setTimeRemaining((prev) => prev - 1);\r\n      }, 1000);\r\n    } else {\r\n      handleNextQuestion(true); // Move to the next question if time is up\r\n    }\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [timeRemaining]);\r\n\r\n  const handleOptionChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = (missed = false) => {\r\n    // Your logic for handling the next question\r\n  };\r\n\r\n  const handleQuestionClick = (index) => {\r\n    setCurrentQuestion(index);\r\n    setTimeRemaining(60); // Reset the timer when a new question is selected\r\n  };\r\n\r\n  const handleSubmit = (finalQuizState = quizState) => {\r\n    console.log(\"Quiz State:\", finalQuizState);\r\n    console.log(`Total Marks: ${score}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"quiz-container\">\r\n        <div className=\"question-container\">\r\n          <p>{questions[currentQuestion].question}</p>\r\n          <ul>\r\n            {questions[currentQuestion].options.map((option, index) => (\r\n              <li key={index}>\r\n                <input\r\n                  type=\"radio\"\r\n                  id={`option${index}`}\r\n                  name=\"options\"\r\n                  value={option}\r\n                  checked={selectedOption === option}\r\n                  onChange={handleOptionChange}\r\n                />\r\n                <label htmlFor={`option${index}`}>{option}</label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"timer\">\r\n          <p>Time Remaining: {timeRemaining} seconds</p>\r\n        </div>\r\n        <div className=\"question-navigation\">\r\n          {questions.map((question, index) => (\r\n            <button\r\n              key={index}\r\n              className={currentQuestion === index ? \"active\" : \"\"}\r\n              onClick={() => handleQuestionClick(index)}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}