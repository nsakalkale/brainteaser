{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY PROJECTS\\\\BrainTeaser_Quiz\\\\brainteaser\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst questions = [\n  // ... (questions array remains unchanged)\n];\nexport default function Quiz() {\n  _s();\n  const location = useLocation();\n  const {\n    duration = 10,\n    negativeMarking,\n    multipleCorrect\n  } = location.state || {};\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [globalTimeRemaining, setGlobalTimeRemaining] = useState(duration * 60); // 10 minutes\n  const [questionTimeRemaining, setQuestionTimeRemaining] = useState(60); // 1 minute per question\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [quizState, setQuizState] = useState([]);\n  const [questionStatus, setQuestionStatus] = useState(Array(questions.length).fill(\"notAttempted\"));\n  useEffect(() => {\n    const savedAnswers = JSON.parse(localStorage.getItem(\"answers\")) || [];\n    const savedGlobalTime = parseInt(localStorage.getItem(\"globalTimeRemaining\"), 10);\n    const savedQuestionTime = parseInt(localStorage.getItem(\"questionTimeRemaining\"), 10);\n    if (savedGlobalTime && savedGlobalTime > 0) {\n      setGlobalTimeRemaining(savedGlobalTime);\n      setAnswers(savedAnswers);\n      setQuestionTimeRemaining(savedQuestionTime || 60);\n    } else {\n      localStorage.setItem(\"globalTimeRemaining\", duration * 60);\n      localStorage.setItem(\"questionTimeRemaining\", 60);\n      localStorage.setItem(\"answers\", JSON.stringify([]));\n    }\n    const globalTimer = setInterval(() => {\n      setGlobalTimeRemaining(prev => {\n        if (prev <= 1) {\n          handleSubmit();\n          clearInterval(globalTimer);\n          return 0;\n        } else {\n          localStorage.setItem(\"globalTimeRemaining\", prev - 1);\n          return prev - 1;\n        }\n      });\n    }, 1000);\n    const questionTimer = setInterval(() => {\n      setQuestionTimeRemaining(prev => {\n        if (prev <= 1) {\n          handleNextQuestion(true);\n          return 60;\n        } else {\n          localStorage.setItem(\"questionTimeRemaining\", prev - 1);\n          return prev - 1;\n        }\n      });\n    }, 1000);\n    return () => {\n      clearInterval(globalTimer);\n      clearInterval(questionTimer);\n    };\n  }, [duration]);\n  useEffect(() => {\n    localStorage.setItem(\"answers\", JSON.stringify(answers));\n  }, [answers]);\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = (missed = false) => {\n    const newAnswers = [...answers, selectedOption];\n    const correctAnswer = questions[currentQuestion].answer;\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : 0;\n    const newQuizState = [...quizState, {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer,\n      marks\n    }];\n    setAnswers(newAnswers);\n    setQuizState(newQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = missed ? \"missed\" : \"attempted\";\n    setQuestionStatus(updatedStatus);\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      handleSubmit(newQuizState);\n    }\n    setQuestionTimeRemaining(60);\n  };\n  const handleQuestionClick = index => {\n    setCurrentQuestion(index);\n    setQuestionTimeRemaining(60);\n  };\n  const handleSubmit = (finalQuizState = quizState) => {\n    console.log(\"Quiz State:\", finalQuizState);\n    console.log(`Total Marks: ${score}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Duration: \", duration, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Negative Marking: \", negativeMarking ? \"Yes\" : \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Multiple Correct: \", multipleCorrect ? \"Yes\" : \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"global-timer\",\n          children: [\"Global Time remaining: \", Math.floor(globalTimeRemaining / 60), \":\", (\"0\" + globalTimeRemaining % 60).slice(-2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-timer\",\n          children: [\"Question Time remaining: \", Math.floor(questionTimeRemaining / 60), \":\", (\"0\" + questionTimeRemaining % 60).slice(-2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-panel\",\n        children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuestionClick(index),\n          className: `question-button ${questionStatus[index]}`,\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"option\",\n          value: option,\n          checked: selectedOption === option,\n          onChange: handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNextQuestion(false),\n        children: currentQuestion === questions.length - 1 ? \"Submit Quiz\" : \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-results\",\n        children: [quizState.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question: \", item.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your Answer: \", item.selectedOption]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Correct Answer: \", item.correctAnswer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Marks Awarded: \", item.marks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Marks: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .quiz-container {\n          padding: 20px;\n        }\n        .quiz-header {\n          display: flex;\n          justify-content: space-between;\n        }\n        .global-timer,\n        .question-timer {\n          margin-left: 20px;\n        }\n        .question-panel {\n          margin-top: 20px;\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .question-button {\n          margin: 5px;\n          padding: 10px;\n          width: 30px;\n          height: 30px;\n          border: 1px solid #ccc;\n          border-radius: 50%;\n        }\n        .question-button.notAttempted {\n          background-color: white;\n        }\n        .question-button.attempted {\n          background-color: green;\n          color: white;\n        }\n        .question-button.missed {\n          background-color: yellow;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Quiz, \"tOfX9cA1rxM6FbgT9+joM590J+E=\", false, function () {\n  return [useLocation];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","questions","Quiz","_s","location","duration","negativeMarking","multipleCorrect","state","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","globalTimeRemaining","setGlobalTimeRemaining","questionTimeRemaining","setQuestionTimeRemaining","answers","setAnswers","score","setScore","quizState","setQuizState","questionStatus","setQuestionStatus","Array","length","fill","savedAnswers","JSON","parse","localStorage","getItem","savedGlobalTime","parseInt","savedQuestionTime","setItem","stringify","globalTimer","setInterval","prev","handleSubmit","clearInterval","questionTimer","handleNextQuestion","handleOptionChange","e","target","value","missed","newAnswers","correctAnswer","answer","isCorrect","marks","newQuizState","question","prevScore","updatedStatus","handleQuestionClick","index","finalQuizState","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","slice","map","_","onClick","options","option","type","name","checked","onChange","item","jsx","_c","$RefreshReg$"],"sources":["D:/MY PROJECTS/BrainTeaser_Quiz/brainteaser/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst questions = [\r\n  // ... (questions array remains unchanged)\r\n];\r\n\r\nexport default function Quiz() {\r\n  const location = useLocation();\r\n  const {\r\n    duration = 10,\r\n    negativeMarking,\r\n    multipleCorrect,\r\n  } = location.state || {};\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [globalTimeRemaining, setGlobalTimeRemaining] = useState(duration * 60); // 10 minutes\r\n  const [questionTimeRemaining, setQuestionTimeRemaining] = useState(60); // 1 minute per question\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [quizState, setQuizState] = useState([]);\r\n  const [questionStatus, setQuestionStatus] = useState(\r\n    Array(questions.length).fill(\"notAttempted\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    const savedAnswers = JSON.parse(localStorage.getItem(\"answers\")) || [];\r\n    const savedGlobalTime = parseInt(\r\n      localStorage.getItem(\"globalTimeRemaining\"),\r\n      10\r\n    );\r\n    const savedQuestionTime = parseInt(\r\n      localStorage.getItem(\"questionTimeRemaining\"),\r\n      10\r\n    );\r\n\r\n    if (savedGlobalTime && savedGlobalTime > 0) {\r\n      setGlobalTimeRemaining(savedGlobalTime);\r\n      setAnswers(savedAnswers);\r\n      setQuestionTimeRemaining(savedQuestionTime || 60);\r\n    } else {\r\n      localStorage.setItem(\"globalTimeRemaining\", duration * 60);\r\n      localStorage.setItem(\"questionTimeRemaining\", 60);\r\n      localStorage.setItem(\"answers\", JSON.stringify([]));\r\n    }\r\n\r\n    const globalTimer = setInterval(() => {\r\n      setGlobalTimeRemaining((prev) => {\r\n        if (prev <= 1) {\r\n          handleSubmit();\r\n          clearInterval(globalTimer);\r\n          return 0;\r\n        } else {\r\n          localStorage.setItem(\"globalTimeRemaining\", prev - 1);\r\n          return prev - 1;\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    const questionTimer = setInterval(() => {\r\n      setQuestionTimeRemaining((prev) => {\r\n        if (prev <= 1) {\r\n          handleNextQuestion(true);\r\n          return 60;\r\n        } else {\r\n          localStorage.setItem(\"questionTimeRemaining\", prev - 1);\r\n          return prev - 1;\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(globalTimer);\r\n      clearInterval(questionTimer);\r\n    };\r\n  }, [duration]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"answers\", JSON.stringify(answers));\r\n  }, [answers]);\r\n\r\n  const handleOptionChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = (missed = false) => {\r\n    const newAnswers = [...answers, selectedOption];\r\n    const correctAnswer = questions[currentQuestion].answer;\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : 0;\r\n    const newQuizState = [\r\n      ...quizState,\r\n      {\r\n        question: questions[currentQuestion].question,\r\n        selectedOption,\r\n        correctAnswer,\r\n        marks,\r\n      },\r\n    ];\r\n\r\n    setAnswers(newAnswers);\r\n    setQuizState(newQuizState);\r\n    setScore((prevScore) => prevScore + marks);\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] = missed ? \"missed\" : \"attempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      handleSubmit(newQuizState);\r\n    }\r\n    setQuestionTimeRemaining(60);\r\n  };\r\n\r\n  const handleQuestionClick = (index) => {\r\n    setCurrentQuestion(index);\r\n    setQuestionTimeRemaining(60);\r\n  };\r\n\r\n  const handleSubmit = (finalQuizState = quizState) => {\r\n    console.log(\"Quiz State:\", finalQuizState);\r\n    console.log(`Total Marks: ${score}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"quiz-container\">\r\n        <div className=\"quiz-header\">\r\n          <p>Duration: {duration} minutes</p>\r\n          <p>Negative Marking: {negativeMarking ? \"Yes\" : \"No\"}</p>\r\n          <p>Multiple Correct: {multipleCorrect ? \"Yes\" : \"No\"}</p>\r\n          <p className=\"global-timer\">\r\n            Global Time remaining: {Math.floor(globalTimeRemaining / 60)}:\r\n            {(\"0\" + (globalTimeRemaining % 60)).slice(-2)}\r\n          </p>\r\n          <p className=\"question-timer\">\r\n            Question Time remaining: {Math.floor(questionTimeRemaining / 60)}:\r\n            {(\"0\" + (questionTimeRemaining % 60)).slice(-2)}\r\n          </p>\r\n        </div>\r\n        <div className=\"question-panel\">\r\n          {questions.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleQuestionClick(index)}\r\n              className={`question-button ${questionStatus[index]}`}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <h3>{questions[currentQuestion].question}</h3>\r\n        {questions[currentQuestion].options.map((option, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"option\"\r\n              value={option}\r\n              checked={selectedOption === option}\r\n              onChange={handleOptionChange}\r\n            />\r\n            <label>{option}</label>\r\n          </div>\r\n        ))}\r\n        <button onClick={() => handleNextQuestion(false)}>\r\n          {currentQuestion === questions.length - 1 ? \"Submit Quiz\" : \"Next\"}\r\n        </button>\r\n        <div className=\"quiz-results\">\r\n          {quizState.map((item, index) => (\r\n            <div key={index}>\r\n              <p>Question: {item.question}</p>\r\n              <p>Your Answer: {item.selectedOption}</p>\r\n              <p>Correct Answer: {item.correctAnswer}</p>\r\n              <p>Marks Awarded: {item.marks}</p>\r\n            </div>\r\n          ))}\r\n          <p>Total Marks: {score}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .quiz-container {\r\n          padding: 20px;\r\n        }\r\n        .quiz-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n        .global-timer,\r\n        .question-timer {\r\n          margin-left: 20px;\r\n        }\r\n        .question-panel {\r\n          margin-top: 20px;\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n        }\r\n        .question-button {\r\n          margin: 5px;\r\n          padding: 10px;\r\n          width: 30px;\r\n          height: 30px;\r\n          border: 1px solid #ccc;\r\n          border-radius: 50%;\r\n        }\r\n        .question-button.notAttempted {\r\n          background-color: white;\r\n        }\r\n        .question-button.attempted {\r\n          background-color: green;\r\n          color: white;\r\n        }\r\n        .question-button.missed {\r\n          background-color: yellow;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}