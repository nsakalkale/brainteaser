{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY PROJECTS\\\\BrainTeaser_Quiz\\\\brainteaser\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([{\n    id: 1,\n    question: \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\n    options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\n    answer: \"a) 3\"\n  }, {\n    id: 2,\n    question: \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\n    options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\n    answer: \"a) 7\"\n  }, {\n    id: 3,\n    question: \"What word becomes shorter when you add two letters to it?\",\n    options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\n    answer: \"a) Short\"\n  }]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [timeRemaining, setTimeRemaining] = useState(60);\n  const [sessionActive, setSessionActive] = useState(false);\n  const [quizState, setQuizState] = useState(Array(questions.length).fill(null));\n  const [score, setScore] = useState(0);\n  const [questionStatus, setQuestionStatus] = useState(Array(questions.length).fill(\"notAttempted\"));\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      event.preventDefault();\n      event.returnValue = \"\";\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, []);\n  useEffect(() => {\n    if (sessionActive) {\n      const timer = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev === 0) {\n            handleNextQuestion(true);\n            return 60;\n          } else {\n            return prev - 1;\n          }\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [sessionActive]);\n  useEffect(() => {\n    if (!sessionActive && quizState.filter(q => q === null).length < questions.length) {\n      handleSubmit();\n    }\n  }, [sessionActive]);\n  const handleBeforeUnloadConfirm = () => {\n    return window.confirm(\"Are you sure you want to reload? Your progress will be lost.\");\n  };\n  window.onbeforeunload = function () {\n    if (!sessionActive && quizState.filter(q => q === null).length < questions.length) {\n      return \"Are you sure you want to reload? Your progress will be lost.\";\n    }\n  };\n  const handleStartQuiz = () => {\n    setSessionActive(true);\n  };\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = (missed = false) => {\n    const correctAnswer = questions[currentQuestion].answer;\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : 0;\n    const updatedQuizState = [...quizState];\n    updatedQuizState[currentQuestion] = {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer,\n      marks\n    };\n    setQuizState(updatedQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = selectedOption !== \"\" ? \"attempted\" : missed ? \"missed\" : \"notAttempted\";\n    setQuestionStatus(updatedStatus);\n    if (currentQuestion === questions.length - 1) {\n      handleLastQuestion();\n    } else {\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\n      setTimeRemaining(60);\n    }\n  };\n  const handleLastQuestion = () => {\n    const correctAnswer = questions[currentQuestion].answer;\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : 0;\n    const updatedQuizState = [...quizState];\n    updatedQuizState[currentQuestion] = {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer,\n      marks\n    };\n    setQuizState(updatedQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\n    setQuestionStatus(updatedStatus);\n    handleSubmit();\n  };\n  const handleSubmit = () => {\n    const updatedQuizState = [...quizState];\n    updatedQuizState[currentQuestion] = {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer: questions[currentQuestion].answer,\n      marks: selectedOption === questions[currentQuestion].answer ? 1 : 0\n    };\n    setQuizState(updatedQuizState);\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\n    setQuestionStatus(updatedStatus);\n    if (currentQuestion === questions.length - 1) {\n      const lastQuestionMarks = selectedOption === questions[currentQuestion].answer ? 1 : 0;\n      setScore(score + lastQuestionMarks);\n      setSessionActive(false);\n      console.log(\"Quiz State:\", updatedQuizState);\n      console.log(\"Total Score:\", score + lastQuestionMarks);\n      alert(\"Quiz submitted successfully. Session ended.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!sessionActive && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-3\",\n      onClick: handleStartQuiz,\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), sessionActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Remaining:\", \" \", timeRemaining < 10 ? `0${timeRemaining}` : timeRemaining, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"option\",\n              id: `option${index}`,\n              value: option,\n              onChange: handleOptionChange,\n              checked: selectedOption === option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: `option${index}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3 me-2\",\n        onClick: handleNextQuestion,\n        disabled: selectedOption === \"\" || currentQuestion === questions.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), currentQuestion === questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3 ms-2\",\n        onClick: handleSubmit,\n        disabled: selectedOption === \"\",\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Question Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: questionStatus.map((status, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `list-group-item list-group-item-action ${status === \"attempted\" ? \"list-group-item-success\" : status === \"missed\" ? \"list-group-item-warning\" : \"\"}`,\n            onClick: () => handleQuestionClick(index),\n            children: [\"Question \", index + 1, \" - \", status]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"MkzRUdG9RLfw8GTVTbuf0K8Z/Fo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","id","question","options","answer","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","timeRemaining","setTimeRemaining","sessionActive","setSessionActive","quizState","setQuizState","Array","length","fill","score","setScore","questionStatus","setQuestionStatus","handleBeforeUnload","event","preventDefault","returnValue","window","addEventListener","removeEventListener","timer","setInterval","prev","handleNextQuestion","clearInterval","filter","q","handleSubmit","handleBeforeUnloadConfirm","confirm","onbeforeunload","handleStartQuiz","handleOptionChange","e","target","value","missed","correctAnswer","isCorrect","marks","updatedQuizState","prevScore","updatedStatus","handleLastQuestion","prevQuestion","lastQuestionMarks","console","log","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","type","name","onChange","checked","htmlFor","disabled","status","handleQuestionClick","_c","$RefreshReg$"],"sources":["D:/MY PROJECTS/BrainTeaser_Quiz/brainteaser/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Quiz = () => {\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      id: 1,\r\n      question:\r\n        \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\r\n      options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\r\n      answer: \"a) 3\",\r\n    },\r\n    {\r\n      id: 2,\r\n      question:\r\n        \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\r\n      options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\r\n      answer: \"a) 7\",\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"What word becomes shorter when you add two letters to it?\",\r\n      options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\r\n      answer: \"a) Short\",\r\n    },\r\n  ]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [timeRemaining, setTimeRemaining] = useState(60);\r\n  const [sessionActive, setSessionActive] = useState(false);\r\n  const [quizState, setQuizState] = useState(\r\n    Array(questions.length).fill(null)\r\n  );\r\n  const [score, setScore] = useState(0);\r\n  const [questionStatus, setQuestionStatus] = useState(\r\n    Array(questions.length).fill(\"notAttempted\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (event) => {\r\n      event.preventDefault();\r\n      event.returnValue = \"\";\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sessionActive) {\r\n      const timer = setInterval(() => {\r\n        setTimeRemaining((prev) => {\r\n          if (prev === 0) {\r\n            handleNextQuestion(true);\r\n            return 60;\r\n          } else {\r\n            return prev - 1;\r\n          }\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [sessionActive]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !sessionActive &&\r\n      quizState.filter((q) => q === null).length < questions.length\r\n    ) {\r\n      handleSubmit();\r\n    }\r\n  }, [sessionActive]);\r\n\r\n  const handleBeforeUnloadConfirm = () => {\r\n    return window.confirm(\r\n      \"Are you sure you want to reload? Your progress will be lost.\"\r\n    );\r\n  };\r\n\r\n  window.onbeforeunload = function () {\r\n    if (\r\n      !sessionActive &&\r\n      quizState.filter((q) => q === null).length < questions.length\r\n    ) {\r\n      return \"Are you sure you want to reload? Your progress will be lost.\";\r\n    }\r\n  };\r\n\r\n  const handleStartQuiz = () => {\r\n    setSessionActive(true);\r\n  };\r\n\r\n  const handleOptionChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = (missed = false) => {\r\n    const correctAnswer = questions[currentQuestion].answer;\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : 0;\r\n\r\n    const updatedQuizState = [...quizState];\r\n    updatedQuizState[currentQuestion] = {\r\n      question: questions[currentQuestion].question,\r\n      selectedOption,\r\n      correctAnswer,\r\n      marks,\r\n    };\r\n\r\n    setQuizState(updatedQuizState);\r\n\r\n    setScore((prevScore) => prevScore + marks);\r\n\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] =\r\n      selectedOption !== \"\" ? \"attempted\" : missed ? \"missed\" : \"notAttempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    if (currentQuestion === questions.length - 1) {\r\n      handleLastQuestion();\r\n    } else {\r\n      setCurrentQuestion((prevQuestion) => prevQuestion + 1);\r\n      setTimeRemaining(60);\r\n    }\r\n  };\r\n\r\n  const handleLastQuestion = () => {\r\n    const correctAnswer = questions[currentQuestion].answer;\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : 0;\r\n\r\n    const updatedQuizState = [...quizState];\r\n    updatedQuizState[currentQuestion] = {\r\n      question: questions[currentQuestion].question,\r\n      selectedOption,\r\n      correctAnswer,\r\n      marks,\r\n    };\r\n\r\n    setQuizState(updatedQuizState);\r\n\r\n    setScore((prevScore) => prevScore + marks);\r\n\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] =\r\n      selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    handleSubmit();\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const updatedQuizState = [...quizState];\r\n    updatedQuizState[currentQuestion] = {\r\n      question: questions[currentQuestion].question,\r\n      selectedOption,\r\n      correctAnswer: questions[currentQuestion].answer,\r\n      marks: selectedOption === questions[currentQuestion].answer ? 1 : 0,\r\n    };\r\n\r\n    setQuizState(updatedQuizState);\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] =\r\n      selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    if (currentQuestion === questions.length - 1) {\r\n      const lastQuestionMarks =\r\n        selectedOption === questions[currentQuestion].answer ? 1 : 0;\r\n      setScore(score + lastQuestionMarks);\r\n\r\n      setSessionActive(false);\r\n      console.log(\"Quiz State:\", updatedQuizState);\r\n      console.log(\"Total Score:\", score + lastQuestionMarks);\r\n      alert(\"Quiz submitted successfully. Session ended.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!sessionActive && (\r\n        <button className=\"btn btn-primary mt-3\" onClick={handleStartQuiz}>\r\n          Start Quiz\r\n        </button>\r\n      )}\r\n      {sessionActive && (\r\n        <div className=\"mt-3\">\r\n          <div className=\"mb-3\">\r\n            <p>\r\n              Time Remaining:{\" \"}\r\n              {timeRemaining < 10 ? `0${timeRemaining}` : timeRemaining} seconds\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <h5>{questions[currentQuestion].question}</h5>\r\n            <form>\r\n              {questions[currentQuestion].options.map((option, index) => (\r\n                <div key={index} className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"option\"\r\n                    id={`option${index}`}\r\n                    value={option}\r\n                    onChange={handleOptionChange}\r\n                    checked={selectedOption === option}\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label\"\r\n                    htmlFor={`option${index}`}\r\n                  >\r\n                    {option}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </form>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary mt-3 me-2\"\r\n            onClick={handleNextQuestion}\r\n            disabled={\r\n              selectedOption === \"\" || currentQuestion === questions.length - 1\r\n            }\r\n          >\r\n            Next\r\n          </button>\r\n          {currentQuestion === questions.length - 1 && (\r\n            <button\r\n              className=\"btn btn-primary mt-3 ms-2\"\r\n              onClick={handleSubmit}\r\n              disabled={selectedOption === \"\"}\r\n            >\r\n              Submit Quiz\r\n            </button>\r\n          )}\r\n          <div className=\"mt-3\">\r\n            <h5>Question Status:</h5>\r\n            <div className=\"list-group\">\r\n              {questionStatus.map((status, index) => (\r\n                <button\r\n                  key={index}\r\n                  className={`list-group-item list-group-item-action ${\r\n                    status === \"attempted\"\r\n                      ? \"list-group-item-success\"\r\n                      : status === \"missed\"\r\n                      ? \"list-group-item-warning\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => handleQuestionClick(index)}\r\n                >\r\n                  Question {index + 1} - {status}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}