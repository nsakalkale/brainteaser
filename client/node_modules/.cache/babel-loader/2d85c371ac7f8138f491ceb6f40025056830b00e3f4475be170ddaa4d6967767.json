{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY PROJECTS\\\\BrainTeaser_Quiz\\\\brainteaser\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([{\n    id: 1,\n    question: \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\n    options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\n    answer: \"a) 3\"\n  }, {\n    id: 2,\n    question: \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\n    options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\n    answer: \"a) 7\"\n  }, {\n    id: 3,\n    question: \"What word becomes shorter when you add two letters to it?\",\n    options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\n    answer: \"a) Short\"\n  }]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [timeRemaining, setTimeRemaining] = useState(60);\n  const [sessionActive, setSessionActive] = useState(false);\n  const [quizState, setQuizState] = useState(Array(questions.length).fill(null));\n  const [score, setScore] = useState(0);\n  const [questionStatus, setQuestionStatus] = useState(Array(questions.length).fill(\"notAttempted\"));\n  const [showSummary, setShowSummary] = useState(false);\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      event.preventDefault();\n      event.returnValue = \"Your progress will be lost and the quiz will be submitted. Are you sure you want to reload?\";\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    const sessionTimer = setTimeout(() => {\n      setSessionActive(false);\n      alert(\"Session ended. Please start again to attempt the quiz.\");\n    }, 10 * 60 * 1000); // 10 minutes session\n\n    return () => {\n      clearTimeout(sessionTimer);\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, []);\n  useEffect(() => {\n    if (sessionActive) {\n      const timer = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev === 0) {\n            if (currentQuestion === questions.length - 1) {\n              handleSubmit();\n            } else {\n              handleNextQuestion(true);\n            }\n            return 60;\n          } else {\n            return prev - 1;\n          }\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [sessionActive, currentQuestion]);\n  const handleStartQuiz = () => {\n    setSessionActive(true);\n  };\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = (missed = false) => {\n    const correctAnswer = questions[currentQuestion].answer;\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : 0;\n    const updatedQuizState = [...quizState];\n    updatedQuizState[currentQuestion] = {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer,\n      marks\n    };\n    setQuizState(updatedQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = selectedOption !== \"\" ? \"attempted\" : missed ? \"missed\" : \"notAttempted\";\n    setQuestionStatus(updatedStatus);\n    if (currentQuestion === questions.length - 1) {\n      // Last question, handle separately\n      handleSubmit();\n    } else {\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\n      setTimeRemaining(60); // Reset timer for the next question\n    }\n  };\n  const handleSubmit = () => {\n    const correctAnswer = questions[currentQuestion].answer;\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : 0;\n    const updatedQuizState = [...quizState];\n    updatedQuizState[currentQuestion] = {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer,\n      marks\n    };\n    setQuizState(updatedQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\n    setQuestionStatus(updatedStatus);\n    setSessionActive(false);\n    setShowSummary(true);\n  };\n  const handleFinalSubmit = () => {\n    setShowSummary(false);\n    console.log(\"Quiz State:\", quizState);\n    console.log(\"Total Score:\", score);\n    alert(\"Quiz submitted successfully. Session ended.\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: !sessionActive && !showSummary && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-4 rounded border\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mt-3\",\n              onClick: handleStartQuiz,\n              children: \"Start Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), sessionActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time Remaining: \", `01:${String(timeRemaining).padStart(2, \"0\")}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: questions[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"radio\",\n                name: \"option\",\n                id: `option${index}`,\n                value: option,\n                onChange: handleOptionChange,\n                checked: selectedOption === option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: `option${index}`,\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3 me-2\",\n          onClick: handleNextQuestion,\n          disabled: selectedOption === \"\" || currentQuestion === questions.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), currentQuestion === questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3 ms-2\",\n          onClick: handleSubmit,\n          disabled: selectedOption === \"\",\n          children: \"Submit Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Question Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-group\",\n            children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `list-group-item ${questionStatus[index] === \"attempted\" ? \"list-group-item-success\" : questionStatus[index] === \"missed\" ? \"list-group-item-warning\" : \"\"}`,\n              children: [\"Question \", index + 1, \" - \", questionStatus[index]]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), showSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Quiz Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: questionStatus.map((status, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", index + 1, \": \", status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleFinalSubmit,\n          children: \"Final Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"j/RuBDGtR9cOlHwVwHMfrJBQyy4=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","questions","setQuestions","id","question","options","answer","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","timeRemaining","setTimeRemaining","sessionActive","setSessionActive","quizState","setQuizState","Array","length","fill","score","setScore","questionStatus","setQuestionStatus","showSummary","setShowSummary","handleBeforeUnload","event","preventDefault","returnValue","window","addEventListener","sessionTimer","setTimeout","alert","clearTimeout","removeEventListener","timer","setInterval","prev","handleSubmit","handleNextQuestion","clearInterval","handleStartQuiz","handleOptionChange","e","target","value","missed","correctAnswer","isCorrect","marks","updatedQuizState","prevScore","updatedStatus","prevQuestion","handleFinalSubmit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","String","padStart","map","option","index","type","name","onChange","checked","htmlFor","disabled","_","status","_c","$RefreshReg$"],"sources":["D:/MY PROJECTS/BrainTeaser_Quiz/brainteaser/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Quiz = () => {\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      id: 1,\r\n      question:\r\n        \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\r\n      options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\r\n      answer: \"a) 3\",\r\n    },\r\n    {\r\n      id: 2,\r\n      question:\r\n        \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\r\n      options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\r\n      answer: \"a) 7\",\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"What word becomes shorter when you add two letters to it?\",\r\n      options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\r\n      answer: \"a) Short\",\r\n    },\r\n  ]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [timeRemaining, setTimeRemaining] = useState(60);\r\n  const [sessionActive, setSessionActive] = useState(false);\r\n  const [quizState, setQuizState] = useState(\r\n    Array(questions.length).fill(null)\r\n  );\r\n  const [score, setScore] = useState(0);\r\n  const [questionStatus, setQuestionStatus] = useState(\r\n    Array(questions.length).fill(\"notAttempted\")\r\n  );\r\n  const [showSummary, setShowSummary] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (event) => {\r\n      event.preventDefault();\r\n      event.returnValue =\r\n        \"Your progress will be lost and the quiz will be submitted. Are you sure you want to reload?\";\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n    const sessionTimer = setTimeout(() => {\r\n      setSessionActive(false);\r\n      alert(\"Session ended. Please start again to attempt the quiz.\");\r\n    }, 10 * 60 * 1000); // 10 minutes session\r\n\r\n    return () => {\r\n      clearTimeout(sessionTimer);\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sessionActive) {\r\n      const timer = setInterval(() => {\r\n        setTimeRemaining((prev) => {\r\n          if (prev === 0) {\r\n            if (currentQuestion === questions.length - 1) {\r\n              handleSubmit();\r\n            } else {\r\n              handleNextQuestion(true);\r\n            }\r\n            return 60;\r\n          } else {\r\n            return prev - 1;\r\n          }\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [sessionActive, currentQuestion]);\r\n\r\n  const handleStartQuiz = () => {\r\n    setSessionActive(true);\r\n  };\r\n\r\n  const handleOptionChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = (missed = false) => {\r\n    const correctAnswer = questions[currentQuestion].answer;\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : 0;\r\n\r\n    const updatedQuizState = [...quizState];\r\n    updatedQuizState[currentQuestion] = {\r\n      question: questions[currentQuestion].question,\r\n      selectedOption,\r\n      correctAnswer,\r\n      marks,\r\n    };\r\n\r\n    setQuizState(updatedQuizState);\r\n\r\n    setScore((prevScore) => prevScore + marks);\r\n\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] =\r\n      selectedOption !== \"\" ? \"attempted\" : missed ? \"missed\" : \"notAttempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    if (currentQuestion === questions.length - 1) {\r\n      // Last question, handle separately\r\n      handleSubmit();\r\n    } else {\r\n      setCurrentQuestion((prevQuestion) => prevQuestion + 1);\r\n      setTimeRemaining(60); // Reset timer for the next question\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const correctAnswer = questions[currentQuestion].answer;\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : 0;\r\n\r\n    const updatedQuizState = [...quizState];\r\n    updatedQuizState[currentQuestion] = {\r\n      question: questions[currentQuestion].question,\r\n      selectedOption,\r\n      correctAnswer,\r\n      marks,\r\n    };\r\n\r\n    setQuizState(updatedQuizState);\r\n\r\n    setScore((prevScore) => prevScore + marks);\r\n\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] =\r\n      selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    setSessionActive(false);\r\n    setShowSummary(true);\r\n  };\r\n\r\n  const handleFinalSubmit = () => {\r\n    setShowSummary(false);\r\n    console.log(\"Quiz State:\", quizState);\r\n    console.log(\"Total Score:\", score);\r\n    alert(\"Quiz submitted successfully. Session ended.\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <div className=\"container\">\r\n        <center>\r\n          {!sessionActive && !showSummary && (\r\n            <>\r\n              <div className=\"bg-white p-4 rounded border\">\r\n                <h2>Instructions</h2>\r\n                <button\r\n                  className=\"btn btn-primary mt-3\"\r\n                  onClick={handleStartQuiz}\r\n                >\r\n                  Start Quiz\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </center>\r\n\r\n        {sessionActive && (\r\n          <div className=\"mt-3\">\r\n            <div className=\"mb-3\">\r\n              <p>\r\n                Time Remaining: {`01:${String(timeRemaining).padStart(2, \"0\")}`}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h5>{questions[currentQuestion].question}</h5>\r\n              <form>\r\n                {questions[currentQuestion].options.map((option, index) => (\r\n                  <div key={index} className=\"form-check\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"option\"\r\n                      id={`option${index}`}\r\n                      value={option}\r\n                      onChange={handleOptionChange}\r\n                      checked={selectedOption === option}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor={`option${index}`}\r\n                    >\r\n                      {option}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </form>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary mt-3 me-2\"\r\n              onClick={handleNextQuestion}\r\n              disabled={\r\n                selectedOption === \"\" ||\r\n                currentQuestion === questions.length - 1\r\n              }\r\n            >\r\n              Next\r\n            </button>\r\n            {currentQuestion === questions.length - 1 && (\r\n              <button\r\n                className=\"btn btn-primary mt-3 ms-2\"\r\n                onClick={handleSubmit}\r\n                disabled={selectedOption === \"\"}\r\n              >\r\n                Submit Quiz\r\n              </button>\r\n            )}\r\n            <div className=\"mt-3\">\r\n              <h5>Question Status:</h5>\r\n              <div className=\"list-group\">\r\n                {questions.map((_, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`list-group-item ${\r\n                      questionStatus[index] === \"attempted\"\r\n                        ? \"list-group-item-success\"\r\n                        : questionStatus[index] === \"missed\"\r\n                        ? \"list-group-item-warning\"\r\n                        : \"\"\r\n                    }`}\r\n                  >\r\n                    Question {index + 1} - {questionStatus[index]}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showSummary && (\r\n          <div className=\"mt-3\">\r\n            <h3>Quiz Summary</h3>\r\n            <p>Total Score: {score}</p>\r\n            <p>\r\n              {questionStatus.map((status, index) => (\r\n                <span key={index}>\r\n                  Question {index + 1}: {status}\r\n                  <br />\r\n                </span>\r\n              ))}\r\n            </p>\r\n            <button className=\"btn btn-primary\" onClick={handleFinalSubmit}>\r\n              Final Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}