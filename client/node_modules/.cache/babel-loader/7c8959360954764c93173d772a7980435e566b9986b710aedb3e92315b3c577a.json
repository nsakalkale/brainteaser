{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY PROJECTS\\\\BrainTeaser_Quiz\\\\brainteaser\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([{\n    id: 1,\n    question: \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\n    options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\n    answer: \"a) 3\"\n  }, {\n    id: 2,\n    question: \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\n    options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\n    answer: \"a) 7\"\n  }, {\n    id: 3,\n    question: \"What word becomes shorter when you add two letters to it?\",\n    options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\n    answer: \"a) Short\"\n  }]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [timeRemaining, setTimeRemaining] = useState(60);\n  const [sessionActive, setSessionActive] = useState(false);\n  const [quizState, setQuizState] = useState(Array(questions.length).fill(null));\n  const [score, setScore] = useState(0);\n  const [questionStatus, setQuestionStatus] = useState(Array(questions.length).fill(\"notAttempted\"));\n  const [showSummary, setShowSummary] = useState(false);\n  useEffect(() => {\n    const sessionTimer = setTimeout(() => {\n      setSessionActive(false);\n      alert(\"Session ended. Please start again to attempt the quiz.\");\n    }, 10 * 60 * 1000); // 10 minutes session\n    return () => clearTimeout(sessionTimer);\n  }, []);\n  useEffect(() => {\n    if (sessionActive) {\n      const timer = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev === 0) {\n            if (currentQuestion === questions.length - 1) {\n              handleSubmit();\n            } else {\n              handleNextQuestion(true);\n            }\n            return 60;\n          } else {\n            return prev - 1;\n          }\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [sessionActive, currentQuestion]);\n  const handleStartQuiz = () => {\n    setSessionActive(true);\n  };\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = (missed = false) => {\n    const correctAnswer = questions[currentQuestion].answer;\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : 0;\n    const updatedQuizState = [...quizState];\n    updatedQuizState[currentQuestion] = {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer,\n      marks\n    };\n    setQuizState(updatedQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = selectedOption !== \"\" ? \"attempted\" : missed ? \"missed\" : \"notAttempted\";\n    setQuestionStatus(updatedStatus);\n    if (currentQuestion === questions.length - 1) {\n      // Last question, handle separately\n      setShowSummary(true);\n    } else {\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\n    }\n  };\n  const handleSubmit = () => {\n    const correctAnswer = questions[currentQuestion].answer;\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : 0;\n    const updatedQuizState = [...quizState];\n    updatedQuizState[currentQuestion] = {\n      question: questions[currentQuestion].question,\n      selectedOption,\n      correctAnswer,\n      marks\n    };\n    setQuizState(updatedQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\n    setQuestionStatus(updatedStatus);\n    setSessionActive(false);\n    setShowSummary(true);\n  };\n  const handleFinalSubmit = () => {\n    setShowSummary(false);\n    console.log(\"Quiz State:\", quizState);\n    console.log(\"Total Score:\", score);\n    alert(\"Quiz submitted successfully. Session ended.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!sessionActive && !showSummary && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-3\",\n      onClick: handleStartQuiz,\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), sessionActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Remaining: \", String(timeRemaining).padStart(2, \"0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"option\",\n              id: `option${index}`,\n              value: option,\n              onChange: handleOptionChange,\n              checked: selectedOption === option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: `option${index}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3 me-2\",\n        onClick: handleNextQuestion,\n        disabled: selectedOption === \"\" || currentQuestion === questions.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), currentQuestion === questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3 ms-2\",\n        onClick: handleSubmit,\n        disabled: selectedOption === \"\",\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Question Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-group-item ${questionStatus[index] === \"attempted\" ? \"list-group-item-success\" : questionStatus[index] === \"missed\" ? \"list-group-item-warning\" : \"\"}`,\n            children: [\"Question \", index + 1, \" - \", questionStatus[index]]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), showSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: questionStatus.map((status, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Question \", index + 1, \": \", status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleFinalSubmit,\n        children: \"Final Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"j/RuBDGtR9cOlHwVwHMfrJBQyy4=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","id","question","options","answer","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","timeRemaining","setTimeRemaining","sessionActive","setSessionActive","quizState","setQuizState","Array","length","fill","score","setScore","questionStatus","setQuestionStatus","showSummary","setShowSummary","sessionTimer","setTimeout","alert","clearTimeout","timer","setInterval","prev","handleSubmit","handleNextQuestion","clearInterval","handleStartQuiz","handleOptionChange","e","target","value","missed","correctAnswer","isCorrect","marks","updatedQuizState","prevScore","updatedStatus","prevQuestion","handleFinalSubmit","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","map","option","index","type","name","onChange","checked","htmlFor","disabled","_","status","_c","$RefreshReg$"],"sources":["D:/MY PROJECTS/BrainTeaser_Quiz/brainteaser/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Quiz = () => {\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      id: 1,\r\n      question:\r\n        \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\r\n      options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\r\n      answer: \"a) 3\",\r\n    },\r\n    {\r\n      id: 2,\r\n      question:\r\n        \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\r\n      options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\r\n      answer: \"a) 7\",\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"What word becomes shorter when you add two letters to it?\",\r\n      options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\r\n      answer: \"a) Short\",\r\n    },\r\n  ]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [timeRemaining, setTimeRemaining] = useState(60);\r\n  const [sessionActive, setSessionActive] = useState(false);\r\n  const [quizState, setQuizState] = useState(\r\n    Array(questions.length).fill(null)\r\n  );\r\n  const [score, setScore] = useState(0);\r\n  const [questionStatus, setQuestionStatus] = useState(\r\n    Array(questions.length).fill(\"notAttempted\")\r\n  );\r\n  const [showSummary, setShowSummary] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const sessionTimer = setTimeout(() => {\r\n      setSessionActive(false);\r\n      alert(\"Session ended. Please start again to attempt the quiz.\");\r\n    }, 10 * 60 * 1000); // 10 minutes session\r\n    return () => clearTimeout(sessionTimer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sessionActive) {\r\n      const timer = setInterval(() => {\r\n        setTimeRemaining((prev) => {\r\n          if (prev === 0) {\r\n            if (currentQuestion === questions.length - 1) {\r\n              handleSubmit();\r\n            } else {\r\n              handleNextQuestion(true);\r\n            }\r\n            return 60;\r\n          } else {\r\n            return prev - 1;\r\n          }\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [sessionActive, currentQuestion]);\r\n\r\n  const handleStartQuiz = () => {\r\n    setSessionActive(true);\r\n  };\r\n\r\n  const handleOptionChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = (missed = false) => {\r\n    const correctAnswer = questions[currentQuestion].answer;\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : 0;\r\n\r\n    const updatedQuizState = [...quizState];\r\n    updatedQuizState[currentQuestion] = {\r\n      question: questions[currentQuestion].question,\r\n      selectedOption,\r\n      correctAnswer,\r\n      marks,\r\n    };\r\n\r\n    setQuizState(updatedQuizState);\r\n\r\n    setScore((prevScore) => prevScore + marks);\r\n\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] =\r\n      selectedOption !== \"\" ? \"attempted\" : missed ? \"missed\" : \"notAttempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    if (currentQuestion === questions.length - 1) {\r\n      // Last question, handle separately\r\n      setShowSummary(true);\r\n    } else {\r\n      setCurrentQuestion((prevQuestion) => prevQuestion + 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const correctAnswer = questions[currentQuestion].answer;\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : 0;\r\n\r\n    const updatedQuizState = [...quizState];\r\n    updatedQuizState[currentQuestion] = {\r\n      question: questions[currentQuestion].question,\r\n      selectedOption,\r\n      correctAnswer,\r\n      marks,\r\n    };\r\n\r\n    setQuizState(updatedQuizState);\r\n\r\n    setScore((prevScore) => prevScore + marks);\r\n\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] =\r\n      selectedOption !== \"\" ? \"attempted\" : \"notAttempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    setSessionActive(false);\r\n    setShowSummary(true);\r\n  };\r\n\r\n  const handleFinalSubmit = () => {\r\n    setShowSummary(false);\r\n    console.log(\"Quiz State:\", quizState);\r\n    console.log(\"Total Score:\", score);\r\n    alert(\"Quiz submitted successfully. Session ended.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!sessionActive && !showSummary && (\r\n        <button className=\"btn btn-primary mt-3\" onClick={handleStartQuiz}>\r\n          Start Quiz\r\n        </button>\r\n      )}\r\n      {sessionActive && (\r\n        <div className=\"mt-3\">\r\n          <div className=\"mb-3\">\r\n            <p>Time Remaining: {String(timeRemaining).padStart(2, \"0\")}</p>\r\n          </div>\r\n          <div>\r\n            <h5>{questions[currentQuestion].question}</h5>\r\n            <form>\r\n              {questions[currentQuestion].options.map((option, index) => (\r\n                <div key={index} className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"option\"\r\n                    id={`option${index}`}\r\n                    value={option}\r\n                    onChange={handleOptionChange}\r\n                    checked={selectedOption === option}\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label\"\r\n                    htmlFor={`option${index}`}\r\n                  >\r\n                    {option}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </form>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary mt-3 me-2\"\r\n            onClick={handleNextQuestion}\r\n            disabled={\r\n              selectedOption === \"\" || currentQuestion === questions.length - 1\r\n            }\r\n          >\r\n            Next\r\n          </button>\r\n          {currentQuestion === questions.length - 1 && (\r\n            <button\r\n              className=\"btn btn-primary mt-3 ms-2\"\r\n              onClick={handleSubmit}\r\n              disabled={selectedOption === \"\"}\r\n            >\r\n              Submit Quiz\r\n            </button>\r\n          )}\r\n          <div className=\"mt-3\">\r\n            <h5>Question Status:</h5>\r\n            <div className=\"list-group\">\r\n              {questions.map((_, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`list-group-item ${\r\n                    questionStatus[index] === \"attempted\"\r\n                      ? \"list-group-item-success\"\r\n                      : questionStatus[index] === \"missed\"\r\n                      ? \"list-group-item-warning\"\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  Question {index + 1} - {questionStatus[index]}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showSummary && (\r\n        <div className=\"mt-3\">\r\n          <h3>Quiz Summary</h3>\r\n          <p>Total Score: {score}</p>\r\n          <p>\r\n            {questionStatus.map((status, index) => (\r\n              <span key={index}>\r\n                Question {index + 1}: {status}\r\n                <br />\r\n              </span>\r\n            ))}\r\n          </p>\r\n          <button className=\"btn btn-primary\" onClick={handleFinalSubmit}>\r\n            Final Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}