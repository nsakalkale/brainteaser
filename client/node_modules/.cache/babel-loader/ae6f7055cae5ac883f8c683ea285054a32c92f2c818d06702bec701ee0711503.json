{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY PROJECTS\\\\BrainTeaser_Quiz\\\\brainteaser\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\n  options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\n  answer: \"a) 3\"\n}, {\n  question: \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\n  options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\n  answer: \"b) 8\"\n}, {\n  question: 'Which word in the following sentence is spelled incorrectly? \"The quick brown fox jumps over the lazy dog.\"',\n  options: [\"a) quick\", \"b) brown\", \"c) fox\", \"d) All words are spelled correctly\"],\n  answer: \"d) All words are spelled correctly\"\n}, {\n  question: 'If you rearrange the letters \"DEBIT CARD,\" you would have a new phrase. What is it?',\n  options: [\"a) Bad Credit\", \"b) Bad Cider\", \"c) Bad Cider Tad\", \"d) Bad Cart Ride\"],\n  answer: \"b) Bad Cider\"\n}, {\n  question: \"If you have a basket with 5 eggs and you take away 3, how many will be left?\",\n  options: [\"a) 2\", \"b) 3\", \"c) 5\", \"d) 8\"],\n  answer: \"a) 2\"\n}, {\n  question: \"What word becomes shorter when you add two letters to it?\",\n  options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\n  answer: \"c) Shorter\"\n}, {\n  question: 'Which word in the following sentence is spelled incorrectly? \"He gave me a seperate piece of cake.\"',\n  options: [\"a) He\", \"b) gave\", \"c) me\", \"d) seperate\"],\n  answer: \"d) seperate\"\n}, {\n  question: \"If you have a basket with 10 apples and you take away 3, how many will be left?\",\n  options: [\"a) 7\", \"b) 8\", \"c) 9\", \"d) 10\"],\n  answer: \"a) 7\"\n}, {\n  question: \"What is the next letter in the following series? O T T F F S S ?\",\n  options: [\"a) E\", \"b) S\", \"c) F\", \"d) N\"],\n  answer: \"c) F\"\n}, {\n  question: 'If you rearrange the letters \"LISTEN,\" you would have a new phrase. What is it?',\n  options: [\"a) Silent\", \"b) Tinsel\", \"c) Enlist\", \"d) Inlets\"],\n  answer: \"c) Enlist\"\n}];\nexport default function Quiz() {\n  _s();\n  const location = useLocation();\n  const {\n    duration = 10,\n    negativeMarking,\n    multipleCorrect\n  } = location.state || {};\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [globalTimeRemaining, setGlobalTimeRemaining] = useState(duration * 60); // 10 minutes\n  const [questionTimeRemaining, setQuestionTimeRemaining] = useState(60); // 1 minute per question\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [quizState, setQuizState] = useState([]);\n  const [questionStatus, setQuestionStatus] = useState(Array(questions.length).fill(\"notAttempted\"));\n  useEffect(() => {\n    const savedAnswers = JSON.parse(localStorage.getItem(\"answers\")) || [];\n    const savedGlobalTime = parseInt(localStorage.getItem(\"globalTimeRemaining\"), 10);\n    const savedQuestionTime = parseInt(localStorage.getItem(\"questionTimeRemaining\"), 10);\n    if (savedGlobalTime && savedGlobalTime > 0) {\n      setGlobalTimeRemaining(savedGlobalTime);\n      setAnswers(savedAnswers);\n      setQuestionTimeRemaining(savedQuestionTime || 60);\n    } else {\n      localStorage.setItem(\"globalTimeRemaining\", duration * 60);\n      localStorage.setItem(\"questionTimeRemaining\", 60);\n      localStorage.setItem(\"answers\", JSON.stringify([]));\n    }\n    const globalTimer = setInterval(() => {\n      setGlobalTimeRemaining(prev => {\n        if (prev <= 1) {\n          handleSubmit();\n          clearInterval(globalTimer);\n          return 0;\n        } else {\n          localStorage.setItem(\"globalTimeRemaining\", prev - 1);\n          return prev - 1;\n        }\n      });\n    }, 1000);\n    const questionTimer = setInterval(() => {\n      setQuestionTimeRemaining(prev => {\n        if (prev <= 1) {\n          handleNextQuestion(true);\n          return 60;\n        } else {\n          localStorage.setItem(\"questionTimeRemaining\", prev - 1);\n          return prev - 1;\n        }\n      });\n    }, 1000);\n    return () => {\n      clearInterval(globalTimer);\n      clearInterval(questionTimer);\n    };\n  }, [duration]);\n  useEffect(() => {\n    localStorage.setItem(\"answers\", JSON.stringify(answers));\n  }, [answers]);\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = (missed = false) => {\n    var _questions$currentQue, _questions$currentQue2;\n    const newAnswers = [...answers, selectedOption];\n    const correctAnswer = ((_questions$currentQue = questions[currentQuestion]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.answer) || \"\";\n    const isCorrect = selectedOption === correctAnswer;\n    const marks = isCorrect ? 1 : 0;\n    const newQuizState = [...quizState, {\n      question: ((_questions$currentQue2 = questions[currentQuestion]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.question) || \"\",\n      selectedOption,\n      correctAnswer,\n      marks\n    }];\n    setAnswers(newAnswers);\n    setQuizState(newQuizState);\n    setScore(prevScore => prevScore + marks);\n    setSelectedOption(\"\");\n    const updatedStatus = [...questionStatus];\n    updatedStatus[currentQuestion] = missed ? \"missed\" : \"attempted\";\n    setQuestionStatus(updatedStatus);\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      handleSubmit(newQuizState);\n    }\n    setQuestionTimeRemaining(60);\n  };\n  const handleQuestionClick = index => {\n    setCurrentQuestion(index);\n    setQuestionTimeRemaining(60);\n  };\n  const handleSubmit = (finalQuizState = quizState) => {\n    console.log(\"Quiz State:\", finalQuizState);\n    console.log(`Total Marks: ${score}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Duration: \", duration, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Negative Marking: \", negativeMarking ? \"Yes\" : \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Multiple Correct: \", multipleCorrect ? \"Yes\" : \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"global-timer\",\n          children: [\"Global Time remaining: \", Math.floor(globalTimeRemaining / 60), \":\", (\"0\" + globalTimeRemaining % 60).slice(-2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-timer\",\n          children: [\"Question Time remaining: \", Math.floor(questionTimeRemaining / 60), \":\", (\"0\" + questionTimeRemaining % 60).slice(-2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-panel\",\n        children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuestionClick(index),\n          className: `question-button ${questionStatus[index]}`,\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), questions[currentQuestion] && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: option,\n            checked: selectedOption === option,\n            onChange: handleOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleNextQuestion(false),\n          children: currentQuestion === questions.length - 1 ? \"Submit Quiz\" : \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-results\",\n        children: [quizState.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question: \", item.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your Answer: \", item.selectedOption]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Correct Answer: \", item.correctAnswer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Marks Awarded: \", item.marks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Marks: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .quiz-container {\n          padding: 20px;\n        }\n        .quiz-header {\n          display: flex;\n          justify-content: space-between;\n        }\n        .global-timer,\n        .question-timer {\n          margin-left: 20px;\n        }\n        .question-panel {\n          margin-top: 20px;\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .question-button {\n          margin: 5px;\n          padding: 10px;\n          width: 30px;\n          height: 30px;\n          border: 1px solid #ccc;\n          border-radius: 50%;\n        }\n        .question-button.notAttempted {\n          background-color: white;\n        }\n        .question-button.attempted {\n          background-color: green;\n          color: white;\n        }\n        .question-button.missed {\n          background-color: yellow;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Quiz, \"tOfX9cA1rxM6FbgT9+joM590J+E=\", false, function () {\n  return [useLocation];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","questions","question","options","answer","Quiz","_s","location","duration","negativeMarking","multipleCorrect","state","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","globalTimeRemaining","setGlobalTimeRemaining","questionTimeRemaining","setQuestionTimeRemaining","answers","setAnswers","score","setScore","quizState","setQuizState","questionStatus","setQuestionStatus","Array","length","fill","savedAnswers","JSON","parse","localStorage","getItem","savedGlobalTime","parseInt","savedQuestionTime","setItem","stringify","globalTimer","setInterval","prev","handleSubmit","clearInterval","questionTimer","handleNextQuestion","handleOptionChange","e","target","value","missed","_questions$currentQue","_questions$currentQue2","newAnswers","correctAnswer","isCorrect","marks","newQuizState","prevScore","updatedStatus","handleQuestionClick","index","finalQuizState","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","slice","map","_","onClick","option","type","name","checked","onChange","item","jsx","_c","$RefreshReg$"],"sources":["D:/MY PROJECTS/BrainTeaser_Quiz/brainteaser/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst questions = [\r\n  {\r\n    question:\r\n      \"If you have a bowl with 6 apples and you take away 3, how many do you have left?\",\r\n    options: [\"a) 3\", \"b) 6\", \"c) 2\", \"d) 4\"],\r\n    answer: \"a) 3\",\r\n  },\r\n  {\r\n    question: \"A farmer has 15 cows and all but 8 die. How many cows are left?\",\r\n    options: [\"a) 7\", \"b) 8\", \"c) 15\", \"d) 23\"],\r\n    answer: \"b) 8\",\r\n  },\r\n  {\r\n    question:\r\n      'Which word in the following sentence is spelled incorrectly? \"The quick brown fox jumps over the lazy dog.\"',\r\n    options: [\r\n      \"a) quick\",\r\n      \"b) brown\",\r\n      \"c) fox\",\r\n      \"d) All words are spelled correctly\",\r\n    ],\r\n    answer: \"d) All words are spelled correctly\",\r\n  },\r\n  {\r\n    question:\r\n      'If you rearrange the letters \"DEBIT CARD,\" you would have a new phrase. What is it?',\r\n    options: [\r\n      \"a) Bad Credit\",\r\n      \"b) Bad Cider\",\r\n      \"c) Bad Cider Tad\",\r\n      \"d) Bad Cart Ride\",\r\n    ],\r\n    answer: \"b) Bad Cider\",\r\n  },\r\n  {\r\n    question:\r\n      \"If you have a basket with 5 eggs and you take away 3, how many will be left?\",\r\n    options: [\"a) 2\", \"b) 3\", \"c) 5\", \"d) 8\"],\r\n    answer: \"a) 2\",\r\n  },\r\n  {\r\n    question: \"What word becomes shorter when you add two letters to it?\",\r\n    options: [\"a) Short\", \"b) Longer\", \"c) Shorter\", \"d) None of the above\"],\r\n    answer: \"c) Shorter\",\r\n  },\r\n  {\r\n    question:\r\n      'Which word in the following sentence is spelled incorrectly? \"He gave me a seperate piece of cake.\"',\r\n    options: [\"a) He\", \"b) gave\", \"c) me\", \"d) seperate\"],\r\n    answer: \"d) seperate\",\r\n  },\r\n  {\r\n    question:\r\n      \"If you have a basket with 10 apples and you take away 3, how many will be left?\",\r\n    options: [\"a) 7\", \"b) 8\", \"c) 9\", \"d) 10\"],\r\n    answer: \"a) 7\",\r\n  },\r\n  {\r\n    question:\r\n      \"What is the next letter in the following series? O T T F F S S ?\",\r\n    options: [\"a) E\", \"b) S\", \"c) F\", \"d) N\"],\r\n    answer: \"c) F\",\r\n  },\r\n  {\r\n    question:\r\n      'If you rearrange the letters \"LISTEN,\" you would have a new phrase. What is it?',\r\n    options: [\"a) Silent\", \"b) Tinsel\", \"c) Enlist\", \"d) Inlets\"],\r\n    answer: \"c) Enlist\",\r\n  },\r\n];\r\n\r\nexport default function Quiz() {\r\n  const location = useLocation();\r\n  const {\r\n    duration = 10,\r\n    negativeMarking,\r\n    multipleCorrect,\r\n  } = location.state || {};\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [globalTimeRemaining, setGlobalTimeRemaining] = useState(duration * 60); // 10 minutes\r\n  const [questionTimeRemaining, setQuestionTimeRemaining] = useState(60); // 1 minute per question\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [quizState, setQuizState] = useState([]);\r\n  const [questionStatus, setQuestionStatus] = useState(\r\n    Array(questions.length).fill(\"notAttempted\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    const savedAnswers = JSON.parse(localStorage.getItem(\"answers\")) || [];\r\n    const savedGlobalTime = parseInt(\r\n      localStorage.getItem(\"globalTimeRemaining\"),\r\n      10\r\n    );\r\n    const savedQuestionTime = parseInt(\r\n      localStorage.getItem(\"questionTimeRemaining\"),\r\n      10\r\n    );\r\n\r\n    if (savedGlobalTime && savedGlobalTime > 0) {\r\n      setGlobalTimeRemaining(savedGlobalTime);\r\n      setAnswers(savedAnswers);\r\n      setQuestionTimeRemaining(savedQuestionTime || 60);\r\n    } else {\r\n      localStorage.setItem(\"globalTimeRemaining\", duration * 60);\r\n      localStorage.setItem(\"questionTimeRemaining\", 60);\r\n      localStorage.setItem(\"answers\", JSON.stringify([]));\r\n    }\r\n\r\n    const globalTimer = setInterval(() => {\r\n      setGlobalTimeRemaining((prev) => {\r\n        if (prev <= 1) {\r\n          handleSubmit();\r\n          clearInterval(globalTimer);\r\n          return 0;\r\n        } else {\r\n          localStorage.setItem(\"globalTimeRemaining\", prev - 1);\r\n          return prev - 1;\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    const questionTimer = setInterval(() => {\r\n      setQuestionTimeRemaining((prev) => {\r\n        if (prev <= 1) {\r\n          handleNextQuestion(true);\r\n          return 60;\r\n        } else {\r\n          localStorage.setItem(\"questionTimeRemaining\", prev - 1);\r\n          return prev - 1;\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(globalTimer);\r\n      clearInterval(questionTimer);\r\n    };\r\n  }, [duration]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"answers\", JSON.stringify(answers));\r\n  }, [answers]);\r\n\r\n  const handleOptionChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = (missed = false) => {\r\n    const newAnswers = [...answers, selectedOption];\r\n    const correctAnswer = questions[currentQuestion]?.answer || \"\";\r\n    const isCorrect = selectedOption === correctAnswer;\r\n    const marks = isCorrect ? 1 : 0;\r\n    const newQuizState = [\r\n      ...quizState,\r\n      {\r\n        question: questions[currentQuestion]?.question || \"\",\r\n        selectedOption,\r\n        correctAnswer,\r\n        marks,\r\n      },\r\n    ];\r\n\r\n    setAnswers(newAnswers);\r\n    setQuizState(newQuizState);\r\n    setScore((prevScore) => prevScore + marks);\r\n    setSelectedOption(\"\");\r\n\r\n    const updatedStatus = [...questionStatus];\r\n    updatedStatus[currentQuestion] = missed ? \"missed\" : \"attempted\";\r\n    setQuestionStatus(updatedStatus);\r\n\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      handleSubmit(newQuizState);\r\n    }\r\n    setQuestionTimeRemaining(60);\r\n  };\r\n\r\n  const handleQuestionClick = (index) => {\r\n    setCurrentQuestion(index);\r\n    setQuestionTimeRemaining(60);\r\n  };\r\n\r\n  const handleSubmit = (finalQuizState = quizState) => {\r\n    console.log(\"Quiz State:\", finalQuizState);\r\n    console.log(`Total Marks: ${score}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"quiz-container\">\r\n        <div className=\"quiz-header\">\r\n          <p>Duration: {duration} minutes</p>\r\n          <p>Negative Marking: {negativeMarking ? \"Yes\" : \"No\"}</p>\r\n          <p>Multiple Correct: {multipleCorrect ? \"Yes\" : \"No\"}</p>\r\n          <p className=\"global-timer\">\r\n            Global Time remaining: {Math.floor(globalTimeRemaining / 60)}:\r\n            {(\"0\" + (globalTimeRemaining % 60)).slice(-2)}\r\n          </p>\r\n          <p className=\"question-timer\">\r\n            Question Time remaining: {Math.floor(questionTimeRemaining / 60)}:\r\n            {(\"0\" + (questionTimeRemaining % 60)).slice(-2)}\r\n          </p>\r\n        </div>\r\n        <div className=\"question-panel\">\r\n          {questions.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleQuestionClick(index)}\r\n              className={`question-button ${questionStatus[index]}`}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {questions[currentQuestion] && (\r\n          <>\r\n            <h3>{questions[currentQuestion].question}</h3>\r\n            {questions[currentQuestion].options.map((option, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"option\"\r\n                  value={option}\r\n                  checked={selectedOption === option}\r\n                  onChange={handleOptionChange}\r\n                />\r\n                <label>{option}</label>\r\n              </div>\r\n            ))}\r\n            <button onClick={() => handleNextQuestion(false)}>\r\n              {currentQuestion === questions.length - 1\r\n                ? \"Submit Quiz\"\r\n                : \"Next\"}\r\n            </button>\r\n          </>\r\n        )}\r\n        <div className=\"quiz-results\">\r\n          {quizState.map((item, index) => (\r\n            <div key={index}>\r\n              <p>Question: {item.question}</p>\r\n              <p>Your Answer: {item.selectedOption}</p>\r\n              <p>Correct Answer: {item.correctAnswer}</p>\r\n              <p>Marks Awarded: {item.marks}</p>\r\n            </div>\r\n          ))}\r\n          <p>Total Marks: {score}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .quiz-container {\r\n          padding: 20px;\r\n        }\r\n        .quiz-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n        .global-timer,\r\n        .question-timer {\r\n          margin-left: 20px;\r\n        }\r\n        .question-panel {\r\n          margin-top: 20px;\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n        }\r\n        .question-button {\r\n          margin: 5px;\r\n          padding: 10px;\r\n          width: 30px;\r\n          height: 30px;\r\n          border: 1px solid #ccc;\r\n          border-radius: 50%;\r\n        }\r\n        .question-button.notAttempted {\r\n          background-color: white;\r\n        }\r\n        .question-button.attempted {\r\n          background-color: green;\r\n          color: white;\r\n        }\r\n        .question-button.missed {\r\n          background-color: yellow;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}